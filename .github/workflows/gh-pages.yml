name: Publish GitHub Pages

# Controls when the action will run.
on:
  # trigger when the Run Data Sync workflow succeeded
  workflow_run:
    workflows: ['Run Data Sync']
    types:
      - completed

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - run: |
          pnpm install
      - run: |
          pnpm build
        env:
          PATH_PREFIX: /

      - name: GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3.1.0
        with:
          # Git branch where site will be deployed
          target_branch: gh-pages
          # Create incremental commit instead of doing push force
          keep_history: true
          # Build directory to deploy
          build_dir: dist
          # Write the given domain name to the CNAME file
          #fqdn: custom.domain.name # optional
          # Prevent Jekyll from building the site
          jekyll: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
